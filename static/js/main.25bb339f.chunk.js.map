{"version":3,"sources":["styles/pages/PeriodicTable.module.css","categoryColor.ts","assets/icons/moon-solid.svg","assets/icons/sun-solid.svg","pages/PeriodicTable.tsx","App.tsx","index.tsx"],"names":["module","exports","categoryColor","Map","set","PeriodicTable","useState","darkMode","setDarkMode","className","styles","periodicTableContainer","style","backgroundColor","title","color","elementsContainer","Object","keys","Array","apply","map","Number","number","columnLabel","gridColumn","gridRow","rowLabel","elements","element","get","category","borderColor","xpos","ypos","elementSymbol","symbol","elementName","floatingMenuContainer","darkModeButton","onClick","src","sunIcon","alt","moonIcon","App","ReactDOM","render","document","getElementById"],"mappings":"yGACAA,EAAOC,QAAU,CAAC,uBAAyB,8CAA8C,MAAQ,6BAA6B,kBAAoB,yCAAyC,YAAc,mCAAmC,SAAW,gCAAgC,QAAU,+BAA+B,cAAgB,qCAAqC,sBAAwB,6CAA6C,eAAiB,wC,8FCDrcC,EAAgB,IAAIC,IAE1BD,EAAcE,IAAI,oBAAqB,WACvCF,EAAcE,IAAI,YAAa,WAC/BF,EAAcE,IAAI,eAAgB,WAClCF,EAAcE,IAAI,uBAAwB,WAC1CF,EAAcE,IAAI,YAAa,WAC/BF,EAAcE,IAAI,sBAAuB,WACzCF,EAAcE,IAAI,wBAAyB,WAC3CF,EAAcE,IAAI,mBAAoB,WACtCF,EAAcE,IAAI,aAAc,WAChCF,EAAcE,IAAI,WAAY,WAEfF,Q,OCbA,MAA0B,uCCA1B,MAA0B,sC,uBCQ1B,SAASG,IAAiB,IAAD,EACJC,oBAAS,GADL,mBAC7BC,EAD6B,KACnBC,EADmB,KAOpC,OACI,sBAAKC,UAAWC,IAAOC,uBAAwBC,MAAO,CAClDC,gBAAiBN,EAAW,UAAY,QAD5C,UAGI,oBAAIE,UAAWC,IAAOI,MAAOF,MAAO,CAChCG,MAAOR,EAAW,OAAS,QAD/B,4BAGA,sBAAKE,UAAWC,IAAOM,kBAAvB,UAEQC,OAAOC,KAAKC,MAAMC,MAAM,EAAED,MAAM,MAAME,IAAIC,QACzCD,KAAI,SAACE,GACF,OACI,qBAAKd,UAAWC,IAAOc,YAAaZ,MAAO,CACvCG,MAAOR,EAAW,OAAS,OAC3BkB,WAAYF,EAAS,EACrBG,QAAS,GAHb,SAIIH,EAAS,OAKrBN,OAAOC,KAAKC,MAAMC,MAAM,EAAED,MAAM,KAAKE,IAAIC,QACxCD,KAAI,SAACE,GACF,OACI,qBAAKd,UAAWC,IAAOiB,SAAUf,MAAO,CACpCG,MAAOR,EAAW,OAAS,OAC3BkB,WAAY,EACZC,QAASH,EAAS,GAHtB,SAIIA,EAAS,OAKrBK,EAASP,KAAI,SAACQ,GACV,OACI,sBAAKpB,UAAWC,IAAOmB,QAASjB,MAAO,CACnCC,gBAAiBX,EAAc4B,IAAID,EAAQE,WAAa,UACxDC,YAAazB,EAAW,OAAS,OACjCkB,WAAYH,OAAOO,EAAQI,MAAQ,EACnCP,QAASJ,OAAOO,EAAQK,MAAQ,GAJpC,UAMI,qBAAKzB,UAAWC,IAAOyB,cAAvB,SAAuCN,EAAQO,SAC/C,qBAAK3B,UAAWC,IAAO2B,YAAvB,SAAqCR,EAAQN,kBAOjE,qBAAKd,UAAWC,IAAO4B,sBAAvB,SACI,wBAAQ7B,UAAWC,IAAO6B,eAAgBC,QAtDtD,WACIhC,GAAaD,IAqD8DK,MAAO,CACtEC,gBAAiBN,EAAW,OAAS,OACrCyB,YAAazB,EAAW,OAAS,QAFrC,SAKQA,EACI,qBAAKkC,IAAKC,EAASC,IAAI,eAEvB,qBAAKF,IAAKG,EAAUD,IAAI,qB,MC/DrCE,MANf,WACI,OACI,cAACxC,EAAD,KCHRyC,IAASC,OACL,cAAC,EAAD,IACAC,SAASC,eAAe,U","file":"static/js/main.25bb339f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"periodicTableContainer\":\"PeriodicTable_periodicTableContainer__1QnQ7\",\"title\":\"PeriodicTable_title__3xt8G\",\"elementsContainer\":\"PeriodicTable_elementsContainer__J7RGL\",\"columnLabel\":\"PeriodicTable_columnLabel__4lcrv\",\"rowLabel\":\"PeriodicTable_rowLabel__1sM1L\",\"element\":\"PeriodicTable_element__3lXXR\",\"elementSymbol\":\"PeriodicTable_elementSymbol__3EV2r\",\"floatingMenuContainer\":\"PeriodicTable_floatingMenuContainer__3pFDk\",\"darkModeButton\":\"PeriodicTable_darkModeButton__kY7uw\"};","const categoryColor = new Map();\r\n\r\ncategoryColor.set(\"diatomic nonmetal\", \"#FFADAD\");\r\ncategoryColor.set(\"noble gas\", \"#FFD6A5\");\r\ncategoryColor.set(\"alkali metal\", \"#FDFFB6\");\r\ncategoryColor.set(\"alkaline earth metal\", \"#CAFFBF\");\r\ncategoryColor.set(\"metalloid\", \"#9BF6FF\");\r\ncategoryColor.set(\"polyatomic nonmetal\", \"#A0C4FF\");\r\ncategoryColor.set(\"post-transition metal\", \"#BDB2FF\");\r\ncategoryColor.set(\"transition metal\", \"#FFC6FF\");\r\ncategoryColor.set(\"lanthanide\", \"#FCBF49\");\r\ncategoryColor.set(\"actinide\", \"#EAE2B7\");\r\n\r\nexport default categoryColor;","export default __webpack_public_path__ + \"static/media/moon-solid.b4a5c498.svg\";","export default __webpack_public_path__ + \"static/media/sun-solid.b288121d.svg\";","import { useState } from 'react';\r\nimport categoryColor from '../categoryColor';\r\nimport elements from '../elements.json';\r\nimport moonIcon from '../assets/icons/moon-solid.svg';\r\nimport sunIcon from '../assets/icons/sun-solid.svg';\r\n\r\nimport styles from '../styles/pages/PeriodicTable.module.css';\r\n\r\nexport default function PeriodicTable() {\r\n    const [darkMode, setDarkMode] = useState(false);\r\n\r\n    function toggleDarkMode() {\r\n        setDarkMode(!darkMode);\r\n    }\r\n    \r\n    return (\r\n        <div className={styles.periodicTableContainer} style={{\r\n            backgroundColor: darkMode ? '#18191A' : '#fff'\r\n        }}>\r\n            <h1 className={styles.title} style={{\r\n                color: darkMode ? '#fff' : '#000'\r\n            }}>Periodic Table</h1>\r\n            <div className={styles.elementsContainer}>\r\n                {\r\n                    Object.keys(Array.apply(0,Array(18))).map(Number)\r\n                    .map((number) => {\r\n                        return (\r\n                            <div className={styles.columnLabel} style={{\r\n                                color: darkMode ? '#fff' : '#000',\r\n                                gridColumn: number + 2,\r\n                                gridRow: 1\r\n                            }}>{number + 1}</div>\r\n                        );\r\n                    })\r\n                }\r\n                {\r\n                    Object.keys(Array.apply(0,Array(8))).map(Number)\r\n                    .map((number) => {\r\n                        return (\r\n                            <div className={styles.rowLabel} style={{\r\n                                color: darkMode ? '#fff' : '#000',\r\n                                gridColumn: 1,\r\n                                gridRow: number + 2\r\n                            }}>{number + 1}</div>\r\n                        );\r\n                    })\r\n                }\r\n                {\r\n                    elements.map((element) => {\r\n                        return (\r\n                            <div className={styles.element} style={{\r\n                                backgroundColor: categoryColor.get(element.category) || '#8D99AE',\r\n                                borderColor: darkMode ? '#fff' : '#000',\r\n                                gridColumn: Number(element.xpos) + 1,\r\n                                gridRow: Number(element.ypos) + 1\r\n                            }}>\r\n                                <div className={styles.elementSymbol}>{element.symbol}</div>\r\n                                <div className={styles.elementName}>{element.number}</div>\r\n                            </div>\r\n                        );\r\n                    })\r\n                }\r\n            </div>\r\n            \r\n            <div className={styles.floatingMenuContainer}>\r\n                <button className={styles.darkModeButton} onClick={toggleDarkMode} style={{\r\n                    backgroundColor: darkMode ? '#fff' : '#000',\r\n                    borderColor: darkMode ? '#fff' : '#000'\r\n                }}>\r\n                    {\r\n                        darkMode ? (\r\n                            <img src={sunIcon} alt=\"Light mode\"/>\r\n                        ) : (\r\n                            <img src={moonIcon} alt=\"Dark mode\"/>\r\n                        )\r\n                    }\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import PeriodicTable from './pages/PeriodicTable';\n\nimport './styles/global.css';\n\nfunction App() {\n    return (\n        <PeriodicTable/>\n    );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}